<?php

add_action('wp_ajax_iwitness_admin_get_users', 'iwitness_admin_get_users');
add_action('wp_ajax_iwitness_do_admin_suspend_user', 'iwitness_do_admin_suspend_user');
add_action('wp_ajax_iwitness_do_admin_delete_user', 'iwitness_do_admin_delete_user');

// for other platform
add_action('wp_ajax_iwitness_do_other_platform', 'iwitness_do_other_platform');
add_action('wp_ajax_nopriv_iwitness_do_other_platform', 'iwitness_do_other_platform');

add_action('wp_ajax_get_access_token', 'iwitness_get_access_token_callback');

function iwitness_admin_get_users()
{
    try {
        $searchText = iwitness_get_post_field_value('searchPhrase');
        $currentPage = iwitness_get_post_field_value('current');
        $pageSize = iwitness_get_post_field_value('rowCount');
        $start_date = iwitness_get_post_field_value('start_date');
        $end_date = iwitness_get_post_field_value('end_date');

        $query = '/user?' . http_build_query(
                array(
                    'page' => $currentPage,
                    'size' => $pageSize,
                ));

        if (!empty($searchText)) {
            $query = $query . '&first_name_search=' . $searchText;
        }

        if(!empty($start_date) && !empty($end_date)) {
            $query = $query . '&created_search=' . $start_date . ',' . $end_date;
        }

        $users = iwitness_api_get($query);
        $result = array(
            'current' => intval($currentPage),
            'rowCount' => $users['page_size'],
            'total' => $users['total_items'],
            'rows' => $users['_embedded']['user']
        );

        header("Content-type: application/json");
        echo json_encode($result);
    } catch (Exception $ex) {
        iwitness_log_error($ex);
    }
    die;
}

function iwitness_do_admin_suspend_user()
{
    try {
        // get data from the form
        $user_id = iwitness_get_post_field_value('user_id');

        // do validation
        iwitness_show_empty_error_message($user_id, 'user id');

        $data = array(
            'id' => $user_id,
            'suspended' => iWitness_Admin_Form_Handler::SUSPEND
        );

        $response = iwitness_api_patch('/user/' . $user_id, array('body' => $data));
        header("Content-type: application/json");
        echo json_encode($response);
    } catch (Exception $ex) {
        iwitness_log_error($ex);
    }
    die;
}

function iwitness_do_admin_delete_user()
{
    try {
        // get data from the form
        $user_id = iwitness_get_post_field_value('user_id');

        // do validation
        iwitness_show_empty_error_message($user_id, 'user id');

        $response = iwitness_api_delete('/user/' . $user_id);
        header("Content-type: application/json");
        echo json_encode($response);
    } catch (Exception $ex) {
        iwitness_log_error($ex);
    }
    die;
}

/**
 * Save and and update a contact if the
 * form was submitted through the user contact page.
 *
 * @return void
 */
function iwitness_do_other_platform()
{
    if (!iwitness_validate_submit('iwitness_do_other_platform', false)) {
        return;
    }

    // get value from the form
    $platform = iwitness_get_post_field_value('platform');
    $email = iwitness_get_post_field_value('email');

    $errors = array();
    // validate them
    if (empty($email)) {
        $errors['email'][] = 'Please enter the email';
    }

    if (empty($platform)) {
        $errors['platform'][] = 'Please enter the platform';
    }

    if (count($errors) > 0) {
        $result = array('status' => 422, 'message' => 'Validation failed', 'response' => $errors);
    } else {

        try {
            $data = array(
                'email' => $email,
                'platform' => $platform,
            );

            $response = iwitness_api_post('/prospect', array('body' => $data));

            $result = array(
                'status' => 200,
                'message' => 'Contact has been updated',
                'response' => $response,
                'request' => $data
            );
        } catch (\Exception $ex) {
            iwitness_log_error($ex);
            if ($ex instanceof iWitness_Api_Exception && $ex->getCode() == 422) {
                $result = array('status' => 422, 'message' => 'Validation failed', 'response' => $ex->get_validation_errors());
            } else {
                $result = array('status' => 500, 'message' => $ex->getMessage(), 'response' => '');
            }
        }
    }
    echo json_encode($result);
    exit;
}

function iwitness_get_access_token_callback()
{
    $result = null;
    try {
        $token = iwitness_get_current_user_access_token();
        if ($token && $token->hasExpired()) {
            $token = iwitness_refresh_access_token($token);
            if($token){
                $result =  array('token' => $token->access_token);
            }
        }
    } catch (Exception $ex) {
        iwitness_log_error($ex);
        $result = array('status' => 500, 'message' => $ex->getMessage(), 'response' => '');
    }
    echo json_encode($result);
    exit;
}